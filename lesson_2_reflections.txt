What happens when you initialize a repository? Why do you need to do it?
It creates the hidden .git file that will hold the metadata for future commits.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
It holds the files you wish to update in the next commit.
It offers the ability to choose which files are a part of the same logical change.

How can you use the staging area to make sure you have one commit per logical
change?
You can ensure that the changes in the commit are all related, 
even if some unrelated changes were made elsewhere.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
They would be helpful with diferent versions of near-identical code.
They keep the versions co-existing instead of having to swich between them.

How do the diagrams help you visualize the branch structure?
They help me understand the relationships between various branches and commits.

What is the result of merging two branches together? 
Why do we represent it in the diagram the way we do?
It combines the changes made in both branches into a single commit.
The merge commit has multiple parents so it is represented that way.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
It can automate much of the proccess and it won't accidentally ommit any changes.